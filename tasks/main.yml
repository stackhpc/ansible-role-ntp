---
- name: Add the OS specific variables
  include_vars: '{{ ansible_os_family }}.yml'
  tags: [ 'configuration', 'package', 'service', 'ntp' ]

- name: Install the required packages in Redhat derivatives
  yum: name=ntp state={{ ntp_pkg_state }}
  when: ansible_os_family == 'RedHat'
  tags: [ 'package', 'ntp' ]

- name: Install the required packages in Debian derivatives
  apt: name=ntp state={{ ntp_pkg_state }} update_cache=yes cache_valid_time=86400
  when: ansible_os_family == 'Debian'
  tags: [ 'package', 'ntp' ]

- name: Copy the ntp.conf template file
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  when: ntp_pkg_state not in ['absent', 'removed']
  notify:
  - restart ntp
  tags: [ 'configuration', 'package', 'ntp' ]

- name: Start/stop ntp service
  service: name={{ ntp_service_name }} state={{ ntp_service_state }} enabled={{ ntp_service_enabled }} pattern='/ntpd'
  when: ntp_pkg_state not in ['absent', 'removed']
  tags: [ 'service', 'ntp' ]

- name: Populate service facts
  service_facts:
  when: ntp_blacklist_enabled | bool

- name: Disable/stop blacklisted services
  service: name={{ service }} state='stopped' enabled='no'
  tags: [ 'service', 'ntp' ]
  when:
    - ntp_blacklist_enabled | bool
    - service in ansible_facts.services
  loop_control:
    loop_var: service
  loop: "{{ ntp_service_blacklist }}"
